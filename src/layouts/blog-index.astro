---
import i18n from 'i18next';
import { Card, CardContent, CardFooter } from '@/components/ui/card';
import {
  Pagination,
  PaginationContent,
  PaginationEllipsis,
  PaginationItem,
  PaginationLink,
  PaginationNext,
  PaginationPrevious,
} from '@/components/ui/pagination';
import { normalize } from '@/lib/normalize';
import { getThemeConfig } from '../config/theme';
import { format } from '../lib/date';
import { buildPager } from '../lib/pagination';
import BlogLayout from './blog.astro';

interface Props {
  items: import('../lib/posts').PostWithLink[];
  currentPage: number;
  totalPages: number;
  pagePrefix?: string;
  baseHref?: string;
  title?: string;
}

const { items, currentPage, totalPages, title = '' } = Astro.props as Props;
const config = getThemeConfig(i18n.language);
const pagePrefix = (Astro.props as Props).pagePrefix ?? config.pagination?.prefix ?? 'page';
const baseHref = (Astro.props as Props).baseHref ?? '/';
const makeHref = (page: number) => (page === 1 ? baseHref : normalize(`/${pagePrefix}/${page}`));
const pagers = buildPager(currentPage, totalPages, makeHref, 1);
---

<BlogLayout content={{ title }}>
  <main class="mx-auto p-6 max-w-3xl">
    <div class="flex flex-col gap-6">
      {
        items.map((post) => {
          const title = post.data.title ?? post.slug;
          const date = format(post.data.date as Date, 'PPP');
          return (
            <Card className="gap-0 bg-background shadow-none hover:shadow-sm py-0 hover:border-border transition-shadow duration-200">
              {post.data.thumbnail && (
                <a href={post.link} class="flex" tabindex="-1">
                  <img
                    src={post.data.thumbnail}
                    alt={post.data.title ?? post.slug}
                    class="rounded-t-xl w-full object-cover aspect-video sm:aspect-[2/1]"
                  />
                </a>
              )}

              <CardContent className="p-4">
                <a href={post.link} class="flex">
                  <span>{title}</span>
                </a>
              </CardContent>

              <CardFooter className="px-4 pb-4">
                <div class="flex items-center gap-2 text-muted-foreground">
                  <span class="text-md icon-[tabler--calendar]" />
                  <span class="text-sm">{date}</span>
                </div>
              </CardFooter>
            </Card>
          );
        })
      }
    </div>

    {
      totalPages > 1 && (
        <div class="mt-6">
          <Pagination>
            <PaginationContent>
              {pagers.map((pager) => {
                if (pager.disabled) {
                  return null;
                }
                if (pager.type === 'prev') {
                  return (
                    <PaginationItem>
                      <PaginationPrevious
                        href={pager.disabled ? undefined : pager.link}
                        aria-disabled={pager.disabled}
                        className="!px-2.5 rounded-full"
                      />
                    </PaginationItem>
                  );
                }
                if (pager.type === 'next') {
                  return (
                    <PaginationItem>
                      <PaginationNext
                        href={pager.disabled ? undefined : pager.link}
                        aria-disabled={pager.disabled}
                        className="!px-2.5 rounded-full"
                      />
                    </PaginationItem>
                  );
                }
                if (pager.type === 'ellipsis') {
                  return (
                    <PaginationItem>
                      <PaginationEllipsis />
                    </PaginationItem>
                  );
                }
                return (
                  <PaginationItem>
                    <PaginationLink
                      href={pager.link}
                      isActive={pager.active}
                      className="rounded-full"
                    >
                      {pager.page}
                    </PaginationLink>
                  </PaginationItem>
                );
              })}
            </PaginationContent>
          </Pagination>
        </div>
      )
    }
  </main>
</BlogLayout>
